/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.XML;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;

import model.Perguntas;
import Util.Util;

/**
 *
 * @author willi
 */
public class PerguntasPanel extends javax.swing.JPanel {

	private Perguntas pergunta;
	private ArrayList<Integer> perguntasSorteadas;
	ArrayList<Perguntas> perguntasErradas;
	ArrayList<Perguntas> todasPerguntas;


	public PerguntasPanel() {
		initComponents();
		perguntasSorteadas = new ArrayList<>();        
		perguntasErradas = new ArrayList<>();
		todasPerguntas = XML.leArquivo();        
		inicializarPergunta();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

        perguntasScrollPane = new javax.swing.JScrollPane();
        questoesPanel = new javax.swing.JPanel();
        perguntaLabel = new javax.swing.JLabel();
        imagemDPerguntaLabel = new javax.swing.JLabel();
        alternativaALabel = new javax.swing.JLabel();
        alternativaBLabel = new javax.swing.JLabel();
        alternativaCLabel = new javax.swing.JLabel();
        alternativaDLabel = new javax.swing.JLabel();
        coretoGifjLabel = new javax.swing.JLabel();
        erradoGifjLabel = new javax.swing.JLabel();
        proximoButton = new javax.swing.JButton();
        pularButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(223, 200, 158));
        setPreferredSize(new java.awt.Dimension(485, 800));

        perguntasScrollPane.setBackground(new java.awt.Color(223, 200, 158));
        perguntasScrollPane.setBorder(null);
        perguntasScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        questoesPanel.setBackground(new java.awt.Color(223, 200, 158));
        questoesPanel.setPreferredSize(new java.awt.Dimension(485, 800));

        perguntaLabel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        perguntaLabel.setForeground(new java.awt.Color(51, 51, 51));
        perguntaLabel.setText("jLabel1");

        imagemDPerguntaLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        imagemDPerguntaLabel.setText("-> Imagem do código ao lado");
        imagemDPerguntaLabel.setMaximumSize(new java.awt.Dimension(120, 140));

        alternativaALabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        alternativaALabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/imagens/AlternativaA.png"))); // NOI18N
        alternativaALabel.setText("A");
        alternativaALabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        alternativaBLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        alternativaBLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/imagens/AlternativaB.png"))); // NOI18N
        alternativaBLabel.setText("B");
        alternativaBLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        alternativaCLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        alternativaCLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/imagens/AlternativaC.png"))); // NOI18N
        alternativaCLabel.setText("C");
        alternativaCLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        alternativaDLabel.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        alternativaDLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/imagens/AlternativaD.png"))); // NOI18N
        alternativaDLabel.setText("D");
        alternativaDLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        coretoGifjLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/imagens/Certo.png"))); // NOI18N

        erradoGifjLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/imagens/errado.png"))); // NOI18N

        proximoButton.setBackground(new java.awt.Color(143, 117, 57));
        proximoButton.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        proximoButton.setForeground(new java.awt.Color(185, 161, 117));
        proximoButton.setText("Finalizar");
        proximoButton.setActionCommand("");
        proximoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        pularButton.setBackground(new java.awt.Color(143, 117, 57));
        pularButton.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        pularButton.setForeground(new java.awt.Color(185, 161, 117));
        pularButton.setText("Pular");
        pularButton.setActionCommand("");
        pularButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout questoesPanelLayout = new javax.swing.GroupLayout(questoesPanel);
        questoesPanel.setLayout(questoesPanelLayout);
        questoesPanelLayout.setHorizontalGroup(
            questoesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(questoesPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(questoesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(perguntaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imagemDPerguntaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alternativaALabel, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alternativaBLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alternativaCLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(questoesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(questoesPanelLayout.createSequentialGroup()
                            .addComponent(pularButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(proximoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(alternativaDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35))
            .addGroup(questoesPanelLayout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addGroup(questoesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(erradoGifjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coretoGifjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        questoesPanelLayout.setVerticalGroup(
            questoesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(questoesPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(perguntaLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagemDPerguntaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(alternativaALabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(alternativaBLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(alternativaCLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(alternativaDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(questoesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(erradoGifjLabel)
                    .addComponent(coretoGifjLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(questoesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pularButton)
                    .addComponent(proximoButton)))
        );

        alternativaALabel.setOpaque(true);
        alternativaALabel.setBackground(Color.WHITE);
        alternativaBLabel.setOpaque(true);
        alternativaBLabel.setBackground(Color.WHITE);
        alternativaCLabel.setOpaque(true);
        alternativaCLabel.setBackground(Color.WHITE);
        alternativaDLabel.setOpaque(true);
        alternativaDLabel.setBackground(Color.WHITE);
        coretoGifjLabel.setVisible(false);
        erradoGifjLabel.setVisible(false);

        perguntasScrollPane.setViewportView(questoesPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(perguntasScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(perguntasScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 480, Short.MAX_VALUE))
        );
    }


	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel alternativaALabel;
	private javax.swing.JLabel alternativaBLabel;
	private javax.swing.JLabel alternativaCLabel;
	private javax.swing.JLabel alternativaDLabel;
	private javax.swing.JLabel coretoGifjLabel;
	private javax.swing.JLabel erradoGifjLabel;
	private javax.swing.JLabel imagemDPerguntaLabel;
	private javax.swing.JLabel perguntaLabel;
	private javax.swing.JScrollPane perguntasScrollPane;
	private javax.swing.JButton proximoButton;
	private javax.swing.JPanel questoesPanel;
	private javax.swing.JButton anteriorButton;
	private javax.swing.JButton pularButton;

	// End of variables declaration//GEN-END:variables

	public Perguntas sorteioDePerguntas() {
		Random perguntasAleatoria = new Random();
		int index;


		boolean flag = true;
		if (todasPerguntas.size() == perguntasSorteadas.size()) {
			index = perguntasAleatoria.nextInt(perguntasErradas.size());
			Perguntas p = perguntasErradas.get(index);
			perguntasErradas.remove(p);
			return p;
		} else {
			while (flag) {
				index = perguntasAleatoria.nextInt(todasPerguntas.size());
				if (verificarPergunta(index)) {
					perguntasSorteadas.add(index);
					return todasPerguntas.get(index);
				}
			}
		}

		return null;
	}

	public boolean verificarPergunta(int index) {
		for (int p : perguntasSorteadas) {
			if (p == index) {
				return false;
			}
		}

		return true;
	}

	public void aparecePerguntas() {
		perguntaLabel.setText("<html><body>" + pergunta.getPergunta() + "</body></html>");
		if (!(pergunta.getEnderecoImagem() == null)) {
			imagemDPerguntaLabel.setVisible(true);


		} else {
			imagemDPerguntaLabel.setVisible(false);
		}
		if (pergunta.getMultiplaEscolha()[0] == null) {
			alternativaALabel.setText("Certo");
			alternativaBLabel.setText("Errado");
			alternativaCLabel.setVisible(false);
			alternativaDLabel.setVisible(false);
		} else {
			alternativaCLabel.setVisible(true);
			alternativaDLabel.setVisible(true);

			alternativaALabel.setText("<html><body>" + pergunta.getMultiplaEscolha()[0] + "</body></html>");
			alternativaBLabel.setText("<html><body>" + pergunta.getMultiplaEscolha()[1] + "</body></html>");
			alternativaCLabel.setText("<html><body>" + pergunta.getMultiplaEscolha()[2] + "</body></html>");
			alternativaDLabel.setText("<html><body>" + pergunta.getMultiplaEscolha()[3] + "</body></html>");
		}

	}

	public void inicializarPergunta() {
		pergunta = sorteioDePerguntas();
		aparecePerguntas();
		JogoPanel.carregarImagemPerguntas(pergunta.getEnderecoImagem());      

	}

	public void voltarPergunta() {
		int i = perguntasSorteadas.get(perguntasSorteadas.size()-2);
		pergunta = todasPerguntas.get(i);
		perguntasSorteadas.remove(perguntasSorteadas.size()-1);
		aparecePerguntas();
		JogoPanel.carregarImagemPerguntas(pergunta.getEnderecoImagem());   
	}

	public boolean correcao(String respostaJogador) {
		if (respostaJogador.contains(pergunta.getResposta())) {
			coretoGifjLabel.setVisible(true);
			Util.multiplicador = 1;
			Util.erros = 0;
			return true;
		} else {
			perguntasErradas.add(pergunta);
			erradoGifjLabel.setVisible(true);

			if (Util.erros == 1) {
				Util.multiplicador++;
			}
			Util.erros++;
			return false;
		}

	}

	public JLabel getAlternativaALabel() {
		return alternativaALabel;
	}

	public void setAlternativaALabel(JLabel alternativaALabel) {
		this.alternativaALabel = alternativaALabel;
	}

	public JLabel getAlternativaBLabel() {
		return alternativaBLabel;
	}

	public void setAlternativaBLabel(JLabel alternativaBLabel) {
		this.alternativaBLabel = alternativaBLabel;
	}

	public JLabel getAlternativaCLabel() {
		return alternativaCLabel;
	}

	public void setAlternativaCLabel(JLabel alternativaCLabel) {
		this.alternativaCLabel = alternativaCLabel;
	}

	public JLabel getAlternativaDLabel() {
		return alternativaDLabel;
	}

	public void setAlternativaDLabel(JLabel alternativaDLabel) {
		this.alternativaDLabel = alternativaDLabel;
	}

	public JButton getProximoButton() {
		return proximoButton;
	}

	public void setProximoButton(JButton proximoButton) {
		this.proximoButton = proximoButton;
	}

	public JLabel getGifjLabel() {
		return coretoGifjLabel;
	}

	public void setGifjLabel(JLabel gifjLabel) {
		this.coretoGifjLabel = gifjLabel;
	}

	public JLabel getCoretoGifjLabel() {
		return coretoGifjLabel;
	}

	public void setCoretoGifjLabel(JLabel coretoGifjLabel) {
		this.coretoGifjLabel = coretoGifjLabel;
	}

	public JLabel getErradoGifjLabel() {
		return erradoGifjLabel;
	}

	public void setErradoGifjLabel(JLabel erradoGifjLabel) {
		this.erradoGifjLabel = erradoGifjLabel;
	}

	public Perguntas getPergunta() {
		return pergunta;
	}

	public void setPergunta(Perguntas pergunta) {
		this.pergunta = pergunta;
	}

	public ArrayList<Integer> getPerguntasSorteadas() {
		return perguntasSorteadas;
	}

	public void setPerguntasSorteadas(ArrayList<Integer> perguntasSorteadas) {
		this.perguntasSorteadas = perguntasSorteadas;
	}

	public javax.swing.JButton getAnteriorButton() {
		return anteriorButton;
	}

	public void setAnteriorButton(javax.swing.JButton anteriorButton) {
		this.anteriorButton = anteriorButton;
	}

	public javax.swing.JButton getPularButton() {
		return pularButton;
	}

	public void setPularButton(javax.swing.JButton pularButton) {
		this.pularButton = pularButton;
	}

}
